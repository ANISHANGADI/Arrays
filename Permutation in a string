Permutation in String
Medium
9.6K
310
Companies
Given two strings s1 and s2, return true if s2 contains a permutation of s1, or false otherwise.

In other words, return true if one of s1's permutations is the substring of s2.

 

Example 1:

Input: s1 = "ab", s2 = "eidbaooo"
Output: true
Explanation: s2 contains one permutation of s1 ("ba").
Example 2:

Input: s1 = "ab", s2 = "eidboaoo"
Output: false
 

Constraints:

1 <= s1.length, s2.length <= 104
s1 and s2 consist of lowercase English letters.

class Solution {
public:
    bool checkInclusion(string s1, string s2) {
        int mp[26]={0};
        for(auto c:s1)
            mp[c-'a']++;
        int j=0,i=0,tot_chars=s1.length();
        while(j<s2.length())
        {
            if(mp[s2[j++]-'a']-- >0)
                tot_chars--;
            if(tot_chars==0)
                return true;
            if(j-i==s1.length() && mp[s2[i++] -'a']++ >=0)
                tot_chars++;       
        }    
        return false;
    }
};
